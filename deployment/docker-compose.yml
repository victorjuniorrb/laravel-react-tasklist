services:
    laravel:
        image: ${DOCKER_IMAGE}:${VERSION}
        environment:
            CONTAINER_MODE: http
            WITH_HORIZON: false
            WITH_SCHEDULER: false
            RUNNING_MIGRATIONS_AND_SEEDERS: true
        volumes:
            - 'storage_app:/var/www/html/storage/app'
        networks:
            - frontend
            - backend
        # não é necessário quando se tem um proxy na frente
        ports:
            - 8000:8000
        depends_on:
            redis:
                condition: service_healthy
            mysql:
                condition: service_healthy
        env_file: 
            - stack.env
        logging:
            driver: "json-file"
            options:
                max-size: "1m"
                max-file: "5"

    laravel_worker:
        image: ${DOCKER_IMAGE}:${VERSION}
        environment:
            CONTAINER_MODE: worker
            RUNNING_MIGRATIONS_AND_SEEDERS: true
            WORKER_COMMAND: php /var/www/html/artisan queue:work
        volumes:
            - 'storage_app:/var/www/html/storage/app'
        env_file:
            - stack.env
        networks:
            - backend
        depends_on:
            redis:
                condition: service_healthy
            mysql:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "true"]
        logging:
            driver: "json-file"
            options:
                max-size: "1m"
                max-file: "5"

    mysql:
        image: mariadb:10.6.18-focal
        restart: unless-stopped
        environment:
            TZ: America/Sao_Paulo
            MARIADB_PASSWORD: '${DB_PASSWORD}'
            MARIADB_DATABASE: '${DB_DATABASE}'
            MARIADB_USER: '${DB_USERNAME}'
            MARIADB_RANDOM_ROOT_PASSWORD: '1'
        volumes:
            - 'mysql:/var/lib/mysql'
        networks:
            - backend
        healthcheck:
            test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
            start_period: 10s
            interval: 10s
            timeout: 5s
            retries: 3

    redis:
        image: 'redis:7-alpine'
        environment:
            TZ: America/Sao_Paulo
            ALLOW_EMPTY_PASSWORD: yes
        volumes:
            - 'redis:/data'
        networks:
            - backend
        healthcheck:
            test: ["CMD", "redis-cli", "ping" ]
            retries: 5
            timeout: 5s

networks:
    frontend:
    backend:
volumes:
    mysql:
    redis:
    storage_app: