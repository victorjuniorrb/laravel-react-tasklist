name: Docker Build & Publish - frankenphp

on:
  push:
    branches:
      - 'frankenphp'
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    branches:
      - 'frankenphp'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    name: Build Image
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Check out the repository code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=short
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
          labels: |
            org.opencontainers.image.url=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and Push
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: deployment/Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=

      # - name: Prune container registry
      #   uses: vlaurin/action-ghcr-prune@v0.6.0
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     user: ${{ github.repository_owner }} 
      #     container: ${{ github.event.repository.name }}
      #     dry-run: false
      #     prune-tags-regexes: |
      #       ^sha-
      #     prune-untagged: true
      #     keep-younger-than: 7
      #     keep-last: 3
  prune-images:  
    name: Prune Image Registry
    runs-on: ubuntu-22.04
    needs: docker
    permissions:
      packages: write
    steps:  
      - uses: vlaurin/action-ghcr-prune@v0.6.0
        with:
          token: ${{ secrets.REGISTRY_TOKEN }}
          user: ${{ github.repository_owner }} 
          container: ${{ github.event.repository.name }}
          dry-run: false
          prune-tags-regexes: |
            ^sha-
          prune-untagged: true
          # keep-younger-than: 7
          keep-last: 1